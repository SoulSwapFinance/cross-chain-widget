"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionFooter = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const utils_1 = require("ethers/lib/utils");
const externalLinks_1 = require("../../core/externalLinks");
const useEstimate_1 = require("../../hooks/useEstimate");
const useSwap_1 = require("../../hooks/useSwap");
const walletService_1 = require("../../services/internal/walletService");
const useSquidStore_1 = require("../../store/useSquidStore");
const LoadingSkeleton_1 = require("../LoadingSkeleton");
const NumericValue_1 = require("../NumericValue");
const TextLink_1 = require("../TextLink");
const TokenUSDValue_1 = require("../TokenUSDValue");
const TotalFees_1 = require("../estimate/TotalFees");
const LoadableRowValue = ({ children, isFetching, }) => {
    if (isFetching) {
        return (0, jsx_runtime_1.jsx)(LoadingSkeleton_1.LoadingSkeleton, {});
    }
    return ((0, jsx_runtime_1.jsx)("span", Object.assign({ className: "tw-flex tw-flex-row tw-items-center tw-gap-1" }, { children: children })));
};
const TransactionFooter = ({ squidRoute, toAmount, toToken, fromToken, exchangeRate, fromChain, toChain, }) => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;
    const { destinationAddress } = (0, useSwap_1.useSwap)();
    const { toAmountMin, firstFeeCost, expressFeeCost, expectedGasRefundCost, isFetching, destChainNativeToken, proposedGasDestinationAmount, } = (0, useEstimate_1.useEstimate)();
    const { config } = (0, useSquidStore_1.useSquidStore)();
    const { swapRoute } = (0, useSquidStore_1.useSwapRoutePersistStore)();
    const titleComponent = (title) => ((0, jsx_runtime_1.jsx)("span", Object.assign({ className: "tw-my-2.5 tw-flex tw-flex-row tw-items-center tw-text-base tw-font-semibold" }, { children: (0, jsx_runtime_1.jsx)("span", { children: title }) })));
    return ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "tw-mt-[16px] tw-flex tw-flex-col tw-border-t-[1px] tw-border-base-200 tw-text-base tw-font-normal" }, { children: [titleComponent("Summary"), (0, jsx_runtime_1.jsxs)("ul", Object.assign({ style: { gap: "0.27rem" }, className: "tw-flex tw-w-full  tw-flex-col tw-text-sm" }, { children: [(0, jsx_runtime_1.jsxs)("li", Object.assign({ className: "tw-flex tw-flex-row tw-items-center tw-justify-between" }, { children: [(0, jsx_runtime_1.jsx)("span", { children: "Convert from" }), (0, jsx_runtime_1.jsx)(LoadableRowValue, Object.assign({ isFetching: isFetching }, { children: (0, jsx_runtime_1.jsxs)("span", Object.assign({ className: "tw-flex tw-flex-row tw-gap-1" }, { children: [(0, jsx_runtime_1.jsx)(NumericValue_1.NumericValue, { value: (0, utils_1.formatUnits)((_a = squidRoute === null || squidRoute === void 0 ? void 0 : squidRoute.params.fromAmount) !== null && _a !== void 0 ? _a : "0", fromToken === null || fromToken === void 0 ? void 0 : fromToken.decimals), significantFigures: 4 }), " ", fromToken === null || fromToken === void 0 ? void 0 : fromToken.symbol, (0, jsx_runtime_1.jsx)(TokenUSDValue_1.TokenUSDValue, { className: "tw-text-sm tw-text-neutral-content", token: fromToken, balance: (0, utils_1.formatUnits)((_b = squidRoute === null || squidRoute === void 0 ? void 0 : squidRoute.params.fromAmount) !== null && _b !== void 0 ? _b : "0", fromToken === null || fromToken === void 0 ? void 0 : fromToken.decimals) })] })) }))] })), (0, jsx_runtime_1.jsxs)("li", Object.assign({ className: "tw-flex tw-flex-row tw-items-center tw-justify-between" }, { children: [(0, jsx_runtime_1.jsx)("span", { children: "Min receive" }), (0, jsx_runtime_1.jsx)(LoadableRowValue, Object.assign({ isFetching: isFetching }, { children: (0, jsx_runtime_1.jsxs)("span", Object.assign({ className: "tw-flex tw-flex-row tw-gap-1" }, { children: [(0, jsx_runtime_1.jsx)(NumericValue_1.NumericValue, { value: toAmountMin, significantFigures: 4, currency: {
                                                symbol: toToken === null || toToken === void 0 ? void 0 : toToken.symbol,
                                                symbolPosition: "after",
                                            } }), " ", (0, jsx_runtime_1.jsx)(TokenUSDValue_1.TokenUSDValue, { className: "tw-text-sm tw-text-neutral-content", token: toToken, balance: toAmountMin })] })) }))] })), (config === null || config === void 0 ? void 0 : config.enableGetGasOnDestination) && ((0, jsx_runtime_1.jsxs)("li", Object.assign({ className: "tw-flex tw-flex-row tw-items-center tw-justify-between" }, { children: [(0, jsx_runtime_1.jsx)("span", { children: "Gas to receive" }), (0, jsx_runtime_1.jsx)(LoadableRowValue, Object.assign({ isFetching: isFetching }, { children: (0, jsx_runtime_1.jsxs)("span", Object.assign({ className: "tw-flex tw-flex-row tw-gap-1" }, { children: [(0, jsx_runtime_1.jsx)(NumericValue_1.NumericValue, { value: (_c = proposedGasDestinationAmount.value.toString()) !== null && _c !== void 0 ? _c : "0", significantFigures: 4, currency: {
                                                symbol: destChainNativeToken === null || destChainNativeToken === void 0 ? void 0 : destChainNativeToken.symbol,
                                                symbolPosition: "after",
                                            } }), " ", (0, jsx_runtime_1.jsx)(TokenUSDValue_1.TokenUSDValue, { className: "tw-text-sm tw-text-neutral-content", token: destChainNativeToken, balance: proposedGasDestinationAmount.value.toString() })] })) }))] }))), (0, jsx_runtime_1.jsxs)("li", Object.assign({ className: "tw-flex tw-flex-row tw-items-center tw-justify-between" }, { children: [(0, jsx_runtime_1.jsx)("span", { children: "Exchange rate" }), (0, jsx_runtime_1.jsx)(LoadableRowValue, Object.assign({ isFetching: isFetching }, { children: (0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsxs)("span", { children: [+toAmount > 0 ? "1" : "0", " ", fromToken === null || fromToken === void 0 ? void 0 : fromToken.symbol] }), (0, jsx_runtime_1.jsx)("span", { children: "=" }), (0, jsx_runtime_1.jsx)("span", { children: exchangeRate !== undefined && ((0, jsx_runtime_1.jsx)(NumericValue_1.NumericValue, { value: exchangeRate, significantFigures: 4, currency: {
                                                    symbol: toToken === null || toToken === void 0 ? void 0 : toToken.symbol,
                                                    symbolPosition: "after",
                                                } })) })] }) }))] })), (0, jsx_runtime_1.jsxs)("li", Object.assign({ className: "tw-flex tw-flex-row tw-items-center tw-justify-between" }, { children: [(0, jsx_runtime_1.jsx)("span", { children: "To" }), (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "tw-flex tw-flex-row tw-items-center" }, { children: (0, walletService_1.formatWalletAddress)(destinationAddress, 10) }))] }))] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "tw-mt-[16px] tw-flex tw-flex-col tw-border-t-[1px] tw-border-base-200 tw-text-base tw-font-normal" }, { children: [titleComponent("Fee breakdown"), (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "tw-flex tw-w-full" }, { children: (0, jsx_runtime_1.jsxs)("ul", Object.assign({ style: { gap: "0.27rem" }, className: "tw-flex tw-w-full  tw-flex-col tw-text-sm" }, { children: [(0, jsx_runtime_1.jsxs)("li", Object.assign({ className: "tw-flex tw-flex-row tw-items-center tw-justify-between" }, { children: [(0, jsx_runtime_1.jsx)("span", { children: "Cross-chain gas fees" }), (0, jsx_runtime_1.jsx)(LoadableRowValue, Object.assign({ isFetching: isFetching }, { children: (0, jsx_runtime_1.jsxs)("span", Object.assign({ className: "tw-flex tw-flex-row tw-gap-1" }, { children: [(0, jsx_runtime_1.jsx)(NumericValue_1.NumericValue, { value: (0, utils_1.formatUnits)((_d = firstFeeCost === null || firstFeeCost === void 0 ? void 0 : firstFeeCost.amount) !== null && _d !== void 0 ? _d : "0", (_e = firstFeeCost === null || firstFeeCost === void 0 ? void 0 : firstFeeCost.token.decimals) !== null && _e !== void 0 ? _e : 18), significantFigures: 4, currency: {
                                                            symbol: firstFeeCost === null || firstFeeCost === void 0 ? void 0 : firstFeeCost.token.symbol,
                                                            symbolPosition: "after",
                                                        } }), (0, jsx_runtime_1.jsxs)("span", Object.assign({ className: "tw-text-neutral-content" }, { children: ["(", (0, jsx_runtime_1.jsx)(NumericValue_1.NumericValue, { formatIfVerySmall: 0.01, currency: { symbol: "$", symbolPosition: "before" }, value: (_f = firstFeeCost === null || firstFeeCost === void 0 ? void 0 : firstFeeCost.amountUSD) !== null && _f !== void 0 ? _f : "0" }), ")"] }))] })) }))] })), config.enableExpress && ((0, jsx_runtime_1.jsxs)("li", Object.assign({ className: "tw-flex tw-flex-row tw-items-center tw-justify-between" }, { children: [(0, jsx_runtime_1.jsx)("span", { children: "Boost fee" }), (0, jsx_runtime_1.jsx)(LoadableRowValue, Object.assign({ isFetching: isFetching }, { children: (0, jsx_runtime_1.jsxs)("span", Object.assign({ className: "tw-flex tw-flex-row tw-items-center tw-gap-1" }, { children: ["+", " ", (0, jsx_runtime_1.jsx)(NumericValue_1.NumericValue, { value: (0, utils_1.formatUnits)((_g = expressFeeCost === null || expressFeeCost === void 0 ? void 0 : expressFeeCost.amount) !== null && _g !== void 0 ? _g : "0", (_h = expressFeeCost === null || expressFeeCost === void 0 ? void 0 : expressFeeCost.token.decimals) !== null && _h !== void 0 ? _h : 18), significantFigures: 4, currency: {
                                                            symbol: expressFeeCost === null || expressFeeCost === void 0 ? void 0 : expressFeeCost.token.symbol,
                                                            symbolPosition: "after",
                                                        } }), (0, jsx_runtime_1.jsxs)("span", Object.assign({ className: "tw-text-neutral-content" }, { children: ["(", (0, jsx_runtime_1.jsx)(NumericValue_1.NumericValue, { formatIfVerySmall: 0.01, currency: { symbol: "$", symbolPosition: "before" }, value: (_j = expressFeeCost === null || expressFeeCost === void 0 ? void 0 : expressFeeCost.amountUSD) !== null && _j !== void 0 ? _j : "0" }), ")"] }))] })) }))] }))), (0, jsx_runtime_1.jsxs)("li", Object.assign({ className: "tw-flex tw-flex-row tw-items-center tw-justify-between" }, { children: [(0, jsx_runtime_1.jsx)("span", { children: "Expected gas refund" }), (0, jsx_runtime_1.jsx)(LoadableRowValue, Object.assign({ isFetching: isFetching }, { children: (0, jsx_runtime_1.jsxs)("span", Object.assign({ className: "tw-flex tw-flex-row tw-items-center tw-gap-1" }, { children: ["-", " ", (0, jsx_runtime_1.jsx)(NumericValue_1.NumericValue, { value: (0, utils_1.formatUnits)(expectedGasRefundCost !== null && expectedGasRefundCost !== void 0 ? expectedGasRefundCost : "0", (_k = firstFeeCost === null || firstFeeCost === void 0 ? void 0 : firstFeeCost.token.decimals) !== null && _k !== void 0 ? _k : 18), significantFigures: 4, currency: {
                                                            symbol: firstFeeCost === null || firstFeeCost === void 0 ? void 0 : firstFeeCost.token.symbol,
                                                            symbolPosition: "after",
                                                        } }), (0, jsx_runtime_1.jsx)(TokenUSDValue_1.TokenUSDValue, { className: "tw-text-sm tw-text-neutral-content", token: firstFeeCost === null || firstFeeCost === void 0 ? void 0 : firstFeeCost.token, balance: (0, utils_1.formatUnits)(expectedGasRefundCost !== null && expectedGasRefundCost !== void 0 ? expectedGasRefundCost : "0", (_l = firstFeeCost === null || firstFeeCost === void 0 ? void 0 : firstFeeCost.token.decimals) !== null && _l !== void 0 ? _l : 18) })] })) }))] })), (0, jsx_runtime_1.jsx)(TotalFees_1.TotalFees, { label: "Total", isFetching: isFetching })] })) }))] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "tw-mt-[16px] tw-flex tw-flex-col tw-border-t-[1px] tw-border-base-200 tw-text-base tw-font-normal" }, { children: [titleComponent("Information"), (0, jsx_runtime_1.jsxs)("span", Object.assign({ className: "tw-block tw-text-xs tw-leading-[1.5] tw-text-neutral-content" }, { children: ["If market prices fluctuate significantly, the transaction may revert and you will receive axlUSDC on the destination chain.", " ", (0, jsx_runtime_1.jsx)(TextLink_1.TextLink, Object.assign({ href: externalLinks_1.squidAxlUSDCWarningLink }, { children: "Learn more" }))] }))] }))] })));
};
exports.TransactionFooter = TransactionFooter;
//# sourceMappingURL=TransactionFooter.js.map